pipeline {
  agent { label 'rasberry' }

  parameters {
    string(name: 'BRANCH_NAME', defaultValue: 'feature/app1-streamlit-setup', description: 'Git branch to deploy')
    choice(name: 'TF_ACTION', choices: ['plan', 'apply', 'destroy'], description: 'Terraform action to run')
  }

  environment {
    SNOWFLAKE_ACCOUNT_NAME = credentials('SNOWFLAKE_ACCOUNT_NAME')
    SNOWFLAKE_ORG_NAME     = credentials('SNOWFLAKE_ORG_NAME')
    SNOWFLAKE_USER         = credentials('SNOWFLAKE_USER')
    SNOWFLAKE_PASSWORD     = credentials('SNOWFLAKE_PASSWORD')
    PATH                   = "/usr/local/bin:/usr/bin:/bin:/snap/bin" // Add the path where terraform is installed
  }

  stages {
    stage('Clone Repo') {
      steps {
        git url: 'https://github.com/kingtvarshin/snowflake-streamlit-ci.git', branch: "${params.BRANCH_NAME}"
      }
    }
    stage('Terraform Init') {
      steps {
        dir('terraform') {
          sh 'terraform init'
        }
      }
    }
    stage('Terraform Plan') {
      when {
        anyOf {
          expression { params.TF_ACTION == 'plan' }
          expression { params.TF_ACTION == 'apply' }
        }
      }
      steps {
        dir('terraform') {
          sh '''
            terraform plan \
              -out=tfplan \
              -var="snowflake_account_name=${SNOWFLAKE_ACCOUNT_NAME}" \
              -var="snowflake_org_name=${SNOWFLAKE_ORG_NAME}" \
              -var="snowflake_user=${SNOWFLAKE_USER}" \
              -var="snowflake_password=${SNOWFLAKE_PASSWORD}"
          '''
        }
      }
    }
  //   stage('Terraform Apply') {
  //     when {
  //       expression { params.TF_ACTION == 'apply' }
  //     }
  //     steps {
  //       dir('terraform') {
  //         sh '''
  //           terraform apply -auto-approve tfplan \
  //             -var="snowflake_account_name=${SNOWFLAKE_ACCOUNT_NAME}" \
  //             -var="snowflake_org_name=${SNOWFLAKE_ORG_NAME}" \
  //             -var="snowflake_user=${SNOWFLAKE_USER}" \
  //             -var="snowflake_password=${SNOWFLAKE_PASSWORD}"
  //         '''
  //       }
  //     }
  //   }
  //   stage('Terraform Destroy') {
  //     when {
  //       expression { params.TF_ACTION == 'destroy' }
  //     }
  //     steps {
  //       dir('terraform') {
  //         sh '''
  //           terraform destroy -auto-approve \
  //             -var="snowflake_account_name=${SNOWFLAKE_ACCOUNT_NAME}" \
  //             -var="snowflake_org_name=${SNOWFLAKE_ORG_NAME}" \
  //             -var="snowflake_user=${SNOWFLAKE_USER}" \
  //             -var="snowflake_password=${SNOWFLAKE_PASSWORD}"
  //         '''
  //       }
  //     }
  //   }
  }

  // post {
  //   success {
  //     dir('terraform') {
  //       archiveArtifacts artifacts: 'tfplan', allowEmptyArchive: true, fingerprint: true
  //     }
  //   }
  // }
}
